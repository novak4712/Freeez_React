export default function getField(str, data) {
    const objField = {};
    const arrayField = [];
    const keysData = Object.keys(data);

    keysData.forEach(key => {
        if (key.includes(str) && key.split('_')[0] && key !== str) {
            objField[key] = data[key]
        }
    });

    const keysObjField = Object.keys(objField);
    let keys = [];

    keysObjField.forEach(key => {
        keys.push(key.split('_')[2]);
    });

    keys = [...new Set(keys)];

    for (let key in objField) {
        let arrayTemp = {};
        keys.map((item) => arrayTemp[item] = objField[key])
        arrayField[key.split('_')[1]] = arrayTemp
    }

    for (let key in objField) {
        // eslint-disable-next-line array-callback-return
        keys.map((item) => {
            if(key.includes(item) && key.split('_')[2] === item){
                arrayField[key.split('_')[1]][item] = objField[key]
            }
        })
    }

    return arrayField
}
