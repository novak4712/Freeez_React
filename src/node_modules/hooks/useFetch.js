import {useState, useEffect, useCallback} from 'react'
import axios from 'axios'

export default url => {
    const baseUrl = 'https://sergei-sorokin.ru/wp-json/wp/v2'
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options, setOptions] = useState({})


    const doFetch = useCallback((options = {}) => {
        setOptions(options)
        setIsLoading(true)
    }, [])

    useEffect(() => {
        let skipGetResponseAfterDestroy = false
        if (!isLoading) {
            return
        }

        axios(baseUrl + url, options)
            .then(res => {
                if (!skipGetResponseAfterDestroy) {
                    setResponse(res.data)
                    setIsLoading(false)
                }
            })
            .catch(error => {
                if (!skipGetResponseAfterDestroy) {
                    setError(error.response.data)
                    setIsLoading(false)
                }
            })
        return () => {
            skipGetResponseAfterDestroy = true
        }
    }, [isLoading, url, options])

    return [{isLoading, response, error}, doFetch]
}
