import React, {useContext, useState, useEffect} from "react";
import {Link} from "react-router-dom";
import ReactPageScroller from 'react-page-scroller';

import ScrollTip from 'components/ScrollTip'
import PageLink from "components/PageLink";
import PortfolioSections from "components/PortfolioSections";
import SinglePhoto from "components/SinglePhoto";
import {CurrentThemeContext} from "contexts/currentTheme";
import subArray from 'utilities/subArray.js';


import styles from './Portfolio.module.scss'
import useFetch from "hooks/useFetch";


const Portfolio = () => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const [currentPage, setCurrentPage] = useState(null);
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const main = currentThemeState.isLang === 'ru' ? 'ГЛАВНАЯ' : 'MAIN';
    let apiUrl = `/wp-json/wp/v2/portfolio?language=${lang}&per_page=100`;
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);
    const [currentCategory, setCurrentCategory] = useState(null);
    let data = [];


    const handlePageChange = (number) => {
        setCurrentPage(number)
    };

    const getSection = (id) => {
        setCurrentCategory(id)
    }

    useEffect(() => {
        doFetch()
    }, [doFetch])


    const filterSection = (data) => {
        if (currentCategory !== null) {
            return data.filter(item => item.categories.includes(currentCategory))
        } else {
            return data;
        }
    }
    if (response) {
        data = filterSection(response)
        data = subArray(data, 4);
    }


    return (
        <div className={`${styles.portfolioWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={data.length}/>
            <div className={styles.portfolioContainer}>
            <PortfolioSections getSection={getSection}/>
            {(isLoading) ? <div>Loading...</div> :
                (data.length > 1) ? <ReactPageScroller
                        containerWidth='100%'
                        containerHeight='100%'
                        transitionTimingFunction='ease-in-out'
                        pageOnChange={handlePageChange}
                        customPageNumber={currentPage}
                        blockScrollDown={currentPage === data.length - 1}
                    >
                        {data.map((item, idx) => {
                            return (
                                <div className={styles.portfolio} key={`item-${idx}`}>
                                    {item.map((item) => {
                                        return (
                                            <div className={styles.portfolioItemWrapper} key={item.id}>
                                                <Link to={{
                                                    pathname: `/portfolio/${item.slug}`,
                                                    state: item.id
                                                }}
                                                      className={`${styles.portfolioItem}`}>
                                                    <SinglePhoto id={item.id} idImg={item.preview_img}/>
                                                    <div className={styles.portfolioItemOverlay}>{item.name}</div>
                                                </Link>
                                            </div>
                                        )
                                    })}
                                </div>
                            )

                        })}
                    </ReactPageScroller> :
                    <React.Fragment>
                        {data.map((item, idx) => {
                            return (
                                <div className={styles.portfolio} key={`item-${idx}`}>
                                    {item.map((item) => {
                                        return (
                                            <div className={styles.portfolioItemWrapper} key={item.id}>
                                                <Link to={{
                                                    pathname: `/portfolio/${item.slug}`,
                                                    state: item.id,
                                                    backPage: '/portfolio'
                                                }}
                                                      className={`${styles.portfolioItem}`}>
                                                    <SinglePhoto id={item.id} idImg={item.preview_img}/>
                                                    <div className={styles.portfolioItemOverlay}>{item.name}</div>
                                                </Link>
                                            </div>
                                        )
                                    })}
                                </div>
                            )

                        })}
                    </React.Fragment>}
            </div>
            <PageLink text={main} url='/'/>
        </div>

    )
};
export default Portfolio;
