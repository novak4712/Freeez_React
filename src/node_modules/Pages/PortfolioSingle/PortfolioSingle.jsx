import React, {useState, useContext, useEffect} from "react";
import ReactPageScroller from 'react-page-scroller';

import styles from './PortfolioSingle.module.scss'
import {CurrentThemeContext} from "contexts/currentTheme";
import ScrollTip from "components/ScrollTip";
import ButtonFreeez from "components/ButtonFreeez";
import Modal from "components/Modal";
import useFetch from "hooks/useFetch";
import SinglePhoto from "components/SinglePhoto";
import getField from "utilities/getField";


const PortfolioSingle = (props) => {
    const [currentThemeState, dispatch] = useContext(CurrentThemeContext);
    const [currentPage, setCurrentPage] = useState(null);
    const work = props.location.state;
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const addCart = currentThemeState.isLang === 'ru' ? 'ДОБАВИТЬ В КОРЗИНУ' : 'ADD TO SHOPPING BAG';
    const preview = currentThemeState.isLang === 'ru' ? 'НА ВЕСЬ ЭКРАН' : 'IN FULL SCREEN';
    const back = currentThemeState.isLang === 'ru' ? 'НАЗАД' : 'BACK';
    const apiUrl = `/wp-json/wp/v2/portfolio/${work}`;
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);

    let data = {};
    let slider = [];

    const handlePageChange = (number) => {
        setCurrentPage(number)
    };

    const handleModalChange = () => {
        dispatch({type: 'SET_MODAL', payload: true});

    };

    useEffect(() => {
        doFetch()

    }, [doFetch, lang])
    if (response) {
        data = response
        slider = getField('slider_images', response);
    }

    return (
        <div
            className={`${styles.portfolioSingleWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={2}/>
            {(isLoading) ? <div>Loading...</div> :
                <React.Fragment>
                    <div className={styles.nameItemWrapper}>
                        <div className={styles.nameItem}>
                            {data.name}
                        </div>
                    </div>
                    <div className={styles.portfolioSingle}>
                        <ReactPageScroller
                            containerWidth='100%'
                            containerHeight='100%'
                            transitionTimingFunction='ease-in-out'
                            pageOnChange={handlePageChange}
                            customPageNumber={currentPage}
                            blockScrollDown={currentPage === 1}
                        >
                            <PortfolioSingleImage handleModalChange={handleModalChange} idImg={data.detail_img}
                                                  id={data.id} text={data.detai_mini_text}/>
                            <PortfolioSingleText text={data.detail_main_text}/>
                        </ReactPageScroller>
                    </div>
                    <div className={styles.portfolioSingleButton}>
                        <button className={styles.buttonPreview}  onClick={handleModalChange} >
                            <div>
                            <span>
                                    {preview}
                                </span>
                            </div>
                        </button>
                        <ButtonFreeez text={addCart} close='Plus' theme='dark' width='300px' align='left'/>
                    </div>
                    <div className={`${styles.pageLinkWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
                        <div className={styles.pageLink} onClick={()=>props.history.goBack()} >
                            {back}
                        </div>
                    </div>
                    <Modal data={slider} id={data.id} isLoading={isLoading}/>
                </React.Fragment>
            }
        </div>
    )
};

const PortfolioSingleImage = ({text, id, idImg}) => {
    return (
        <div className={styles.portfolioSingleImage}>
            <div className={styles.singleImageWrapper}>
                <SinglePhoto id={id} idImg={idImg}/>
            </div>
            <div className={styles.singleTextWrapper}>
                <div dangerouslySetInnerHTML={{__html: text}}/>
            </div>
        </div>
    )
};

const PortfolioSingleText = ({text}) => {
    return (
        <div className={styles.portfolioSingleText}>
            <div dangerouslySetInnerHTML={{__html: text}}/>
        </div>
    )
};


export default PortfolioSingle
