import React, {useContext, useEffect} from "react";
import {Link} from "react-router-dom";

import styles from './TrainingSingle.module.scss'
import {CurrentThemeContext} from "contexts/currentTheme";
import useFetch from "hooks/useFetch";


const TrainingSingle = (props) => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const data = props.location.state;
    const back = currentThemeState.isLang === 'ru' ? 'НАЗАД' : 'BACK';
    const teacher = currentThemeState.isLang === 'ru' ? 'ПРЕПОДОВАТЕЛЬ' : 'TEACHER';
    const course = currentThemeState.isLang === 'ru' ? 'ПРОГРАММА КУРСА' : 'COURSE PROGRAM';
    const reviews = currentThemeState.isLang === 'ru' ? 'ОТЗЫВЫ' : 'REVIEWS';
    let apiUrl = `/wp-json/wp/v2/workers/${data.teacher}`;
    const [{response}, doFetch] = useFetch(apiUrl);
    let person = {
        slug: '',
        works: [],
        id: ''
    }

    useEffect(() => {
        doFetch()
    }, [doFetch])

    if (response) {
        person.slug = response.slug;
        person.id = response.id;
        person.works = response['work-in-portfolio'];
    }

    return (
        <div className={`${styles.trainingSingleWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <div className={styles.trainingSingle}>
                <div className={styles.trainingHeader}>
                    <Link to={{
                        pathname: `/our_team/${person.slug}`,
                        state: {
                            works: person.works,
                            id: person.id
                        }
                    }} className={styles.teacher}>
                        {teacher}
                    </Link>
                    <div className={styles.course}>
                        {course}
                    </div>
                    <Link to={`/reviews`} className={styles.reviews}>
                        {reviews}
                    </Link>
                </div>
                <div className={styles.trainingContent}>
                    <div className={styles.leftText}>
                        <div dangerouslySetInnerHTML={{__html: data['programm-left']}} className={styles.mainText}/>
                    </div>
                    <div className={styles.rightText}>
                        <div dangerouslySetInnerHTML={{__html: data['programm-right']}} className={styles.mainText}/>
                    </div>
                </div>
            </div>
            <div className={styles.pageLinkWrapper}>
                <div className={styles.pageLink} onClick={() => props.history.goBack()}>
                    {back}
                </div>
            </div>
        </div>
    )
};

export default TrainingSingle;
