import React, {useContext, useEffect} from "react";

import PageLink from "components/PageLink";
import {CurrentThemeContext} from "contexts/currentTheme";
import useFetch from 'hooks/useFetch';
import getField from 'utilities/getField';

import styles from './AllContacts.module.scss'


const AllContacts = () => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const back = currentThemeState.isLang === 'ru' ? 'НАЗАД' : 'BACK';
    const titlePhone = currentThemeState.isLang === 'ru' ? 'ВЫ МОЖЕТЕ СВЯЗАТЬСЯ С НАМИ ПО' : 'FEEL FREE TO CONTACT US VIA';
    const titleConnection = currentThemeState.isLang === 'ru' ? 'ИЛИ' : 'OR';
    const apiUrl = `/wp-json/wp/v2/site_info?language=${lang}`;
    const [{response}, doFetch] = useFetch(apiUrl);
    let connection = [];
    let phones = [];
    let header = '';
    let text = '';


    useEffect(() => {
        doFetch()
    }, [doFetch, lang])

    if (response) {
        connection = getField('connection', response[0]);
        phones = getField('phones', response[0]);
        header = response[0].header;
        text = response[0].text;
    }


    return (
        <div className={`${styles.allContactsWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <div className={styles.allContacts}>
                <div className={styles.infoWrapper}>
                    <div dangerouslySetInnerHTML={{ __html: header }}/>
                    <div>
                        {titlePhone}:
                    </div>
                    <ul className={styles.phone}>

                        {phones.map((phone, idx) => {
                            return (
                                <li key={`phone-${idx}`}>
                                    <a href={`tel:${phone.number.replace(/\D/g, '')}`}>{phone.number}</a>
                                </li>
                            )
                        })}

                    </ul>
                    <div>
                        {titleConnection}:
                    </div>
                    <ul className={styles.mail}>
                        {connection.map((item, idx) => {
                            return (
                                <li key={`link-${idx}`}>
                                    <a href={item.link}>{item.text}</a>
                                </li>
                            )
                        })}
                    </ul>
                    <div dangerouslySetInnerHTML={{ __html: text }} />
                </div>
                <div className={styles.formWrapper}>

                </div>
            </div>
            <PageLink text={back} url='/'/>
        </div>
    )
};

export default AllContacts;
