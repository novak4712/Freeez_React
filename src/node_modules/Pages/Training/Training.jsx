import React, {useState, useContext, useEffect} from "react";
import ReactPageScroller from "react-page-scroller";

import ScrollTip from "components/ScrollTip";
import {CurrentThemeContext} from "contexts/currentTheme";
import useFetch from "hooks/useFetch";
import subArray from "utilities/subArray";
import TrainingCart from "components/TrainingCart";

import styles from './Training.module.scss'


const Training = ({history}) => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const [currentPage, setCurrentPage] = useState(null);
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const back = currentThemeState.isLang === 'ru' ? 'НАЗАД' : 'BACK';
    let apiUrl = `/wp-json/wp/v2/education?language=${lang}&per_page=100`;
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);
    let data = [];

    const handlePageChange = (number) => {
        setCurrentPage(number)
    };

    useEffect(() => {
        doFetch()
    }, [doFetch, lang])

    if (response) {
        data = subArray(response, 4);
    }


    return (
        <div className={`${styles.trainingWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={data.length}/>
            {(isLoading) ? <div>Loading...</div> :
                (data.length > 1) ? <ReactPageScroller
                        containerWidth='100%'
                        containerHeight='100%'
                        transitionTimingFunction='ease-in-out'
                        pageOnChange={handlePageChange}
                        customPageNumber={currentPage}
                        blockScrollDown={currentPage === data.length - 1}
                    >
                        {data.map((item, idx) => {
                            return (
                                <div className={styles.training} key={`item-${idx}`}>
                                    {item.map((item) => {
                                        return (
                                            <TrainingCart data={item} key={item.id}/>
                                        )
                                    })}
                                </div>
                            )

                        })}
                    </ReactPageScroller> :
                    <React.Fragment>
                        {data.map((item, idx) => {
                            return (
                                <div className={styles.training} key={`item-${idx}`}>
                                    {item.map((item, idx) => {
                                        return (
                                            <TrainingCart data={item} key={item.id} align={idx % 2}/>
                                        )
                                    })}
                                </div>
                            )

                        })}
                    </React.Fragment>}
            <div className={styles.pageLinkWrapper}>
                <div className={styles.pageLink} onClick={() => history.goBack()}>
                    {back}
                </div>
            </div>
        </div>
    )
};

export default Training;
