import React, {useContext, useState, useEffect, useCallback} from "react";
import axios from "axios";
import ReactPageScroller from "react-page-scroller";
import {Link} from 'react-router-dom'

import {CurrentThemeContext} from "contexts/currentTheme";
import {CurrentShoppingBagContext} from "contexts/currentShoppingBag";
import BagItems from "components/BagItems"
import subArray from "utilities/subArray";
import ScrollTip from "components/ScrollTip";
import BagInfoBlock from "components/BagInfoBlock";

import styles from './ShoppingBag.module.scss'

const ShoppingBag = ({history}) => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const [{expressBag, trainingBag}, dispatch] = useContext(CurrentShoppingBagContext);
    const [currentPage, setCurrentPage] = useState(null);
    const [error, setError] = useState(null);
    const [training, setTraining] = useState(null);
    const [express, setExpress] = useState(null);
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const back = currentThemeState.isLang === 'ru' ? 'НАЗАД' : 'BACK';
    const textCheckBox = currentThemeState.isLang === 'ru' ? 'Я ознакомился с условиями лицензионного соглашения и условиями использования' : 'I have read the terms of the license agreement and the terms of use';
    let data = []

    const filterBag = (dataArray, bagArray) => {
        dataArray.map((item) => {
            if (bagArray.includes(item.id)) {
                data.push(item)
            }
        });
    }

    const handlePageChange = (number) => {
        setCurrentPage(number)
    };

    const getTrainingBag = useCallback(() => {
        const apiUrl = `https://sergei-sorokin.ru/wp-json/wp/v2/education?language=${lang}&per_page=100`;
        axios.get(apiUrl)
            .then(res => {
                setTraining(res.data);
            }).catch(error => {
            setError(error.response)
        });
    }, [lang])

    const getExpressBag = useCallback(() => {
        const apiUrl = `https://sergei-sorokin.ru/wp-json/wp/v2/express_design?language=${lang}&per_page=100`;
        axios.get(apiUrl)
            .then(res => {
                setExpress(res.data);
            }).catch(error => {
            setError(error.response)
        });
    }, [lang])

    useEffect(() => {
        getTrainingBag();
        getExpressBag();
    }, [getTrainingBag, getExpressBag]);

    const removeBag = (id, type) => {
        if (type === 'express_design') {
            dispatch({type: 'SET_EXPRESS_BAG', payload: expressBag.filter(item => item !== id)});
        }
        if (type === 'education') {
            dispatch({type: 'SET_TRAINING_BAG', payload: trainingBag.filter(item => item !== id)});
        }
    }
    if (training) {
        filterBag(training, trainingBag);
    }
    if (express) {
        filterBag(express, expressBag);
    }

    data = subArray(data, 4);

    return (
        <div className={`${styles.shoppingBagWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={data.length}/>
            <div className={styles.shoppingBagContainer}>
                {(data.length) ?
                    <React.Fragment>
                        <div className={styles.bagItemsWrapper}>
                            {(data.length > 1) ? <ReactPageScroller
                                    containerWidth='100%'
                                    containerHeight='100%'
                                    transitionTimingFunction='ease-in-out'
                                    pageOnChange={handlePageChange}
                                    customPageNumber={currentPage}
                                    blockScrollDown={currentPage === data.length - 1}
                                >
                                    {data.map((item, idx) => {
                                        return (
                                            <div className={styles.bagItems} key={`item-${idx}`}>
                                                {item.map((el) => {
                                                    return (
                                                        <BagItems data={el} key={el.id} removeBag={removeBag}/>
                                                    )
                                                })}
                                            </div>
                                        )

                                    })}
                                </ReactPageScroller> :
                                <React.Fragment>
                                    {data.map((item, idx) => {
                                        return (
                                            <div className={styles.bagItems} key={`item-${idx}`}>
                                                {item.map((el) => {
                                                    return (
                                                        <BagItems data={el} key={el.id} removeBag={removeBag}/>
                                                    )
                                                })}
                                            </div>
                                        )

                                    })}
                                </React.Fragment>}

                        </div>
                        <div className={styles.bagInfoWrapper}>
                            <div className={styles.bagInfoBlocks}>
                                <BagInfoBlock type='terms'/>
                                <BagInfoBlock type='license'/>
                            </div>
                            <div className={styles.bagInfoFooter}>
                                <div className={styles.checkboxWrapper}>
                                    <label htmlFor="remember" className={styles.labelCheckbox}>
                                        <input type="checkbox" className={styles.checkbox} id='remember'/>
                                        {textCheckBox}
                                        <div className={styles.arrowWrapper}>
                                            <svg width="12" height="6" viewBox="0 0 14 8" fill="none"
                                                 xmlns="http://www.w3.org/2000/svg">
                                                <path
                                                    d="M6.98708 5.48206L12.1921 0.318462C12.2891 0.218831 12.4052 0.13936 12.5334 0.08469C12.6617 0.0300197 12.7997 0.00124303 12.9393 3.94887e-05C13.079 -0.00116405 13.2174 0.0252298 13.3467 0.0776805C13.4759 0.130131 13.5933 0.207588 13.692 0.305532C13.7907 0.403477 13.8688 0.519946 13.9217 0.648146C13.9746 0.776345 14.0012 0.913706 14 1.05221C13.9987 1.19072 13.9697 1.32761 13.9146 1.45487C13.8595 1.58214 13.7794 1.69725 13.679 1.79348L7.73051 7.69458C7.53332 7.89014 7.26591 8 6.98708 8C6.70825 8 6.44084 7.89014 6.24365 7.69458L0.295175 1.79348C0.103631 1.59674 -0.00235636 1.33324 3.9447e-05 1.05972C0.00243525 0.786214 0.113023 0.524578 0.307984 0.33117C0.502945 0.137761 0.76668 0.0280542 1.04239 0.0256776C1.31809 0.0233006 1.58371 0.128445 1.78203 0.318463L6.98708 5.48206Z"
                                                />
                                            </svg>
                                        </div>
                                    </label>
                                </div>
                                <div className={styles.bagInfoButtonWrapper}>
                                    <Link to={'#'} className={styles.bagInfoButton}>
                                        Оформить
                                    </Link>
                                </div>
                            </div>
                        </div>
                    </React.Fragment> :
                    <div className={styles.bagEmptyWrapper}>
                        корзина пуста
                    </div>
                }
            </div>
            <div className={styles.pageLinkWrapper}>
                <div className={styles.pageLink} onClick={() => history.goBack()}>
                    {back}
                </div>
            </div>
        </div>
    )
};

export default ShoppingBag;
