import React, {useContext, useState, useEffect} from "react";
import {Link} from "react-router-dom";
import ReactPageScroller from 'react-page-scroller';

import ScrollTip from 'components/ScrollTip'
import {CurrentThemeContext} from "contexts/currentTheme";
import subArray from 'utilities/subArray.js';

import styles from 'Pages/Services/Services.module.scss'
import useFetch from "hooks/useFetch";


const Services = () => {
    const [currentThemeState] = useContext(CurrentThemeContext);
    const [currentPage, setCurrentPage] = useState(null);
    const lang = currentThemeState.isLang === 'ru' ? 22 : 19;
    const parentCategory = currentThemeState.isLang === 'ru' ? 57 : 59;
    let apiUrl = `/wp-json/wp/v2/categories?per_page=100`;
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);
    let data = [];


    useEffect(() => {
        doFetch()
    }, [doFetch, lang])

    if (response) {
        data = response.filter(item => item.parent === parentCategory && item.lang === currentThemeState.isLang)
        data.map((item) => item['child_category'] = response.filter(el => el.parent === item.id && el.lang === currentThemeState.isLang))
        data = subArray(data, 8);
    }

    const handlePageChange = (number) => {
        setCurrentPage(number)
    }

    return (
        <div className={`${styles.servicesWrapper} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={data.length}/>
            <div className={styles.services}>
                {(isLoading) ? <div>Loading...</div> :
                    (data.length > 1) ?
                        <ReactPageScroller
                            containerWidth='100%'
                            containerHeight='100%'
                            transitionTimingFunction='ease-in-out'
                            pageOnChange={handlePageChange}
                            customPageNumber={currentPage}
                            blockScrollDown={currentPage === data.length - 1}
                        >
                            {
                                data.map((item, idx) => {
                                    return (
                                        <div className={styles.serviceItemWrapper} key={`services-${idx}`}>
                                            {
                                                item.map((service, idx) => {
                                                    return (
                                                        <div key={`${service.name}-${idx}`}
                                                             className={styles.serviceItem}>
                                                            <div className={styles.serviceName}>
                                                                {service.name}
                                                            </div>
                                                            <div className={styles.serviceLinks}>
                                                                {service.child_category.map((link) => {
                                                                    return (
                                                                        <Link to={{
                                                                            pathname: `/services/${link.slug}`,
                                                                            state: link.id
                                                                        }}
                                                                              key={`${link.id}`}
                                                                              className={styles.link}>
                                                                            {link.name}
                                                                        </Link>
                                                                    )
                                                                })}
                                                            </div>
                                                        </div>
                                                    )
                                                })
                                            }
                                        </div>
                                    )
                                })
                            }
                        </ReactPageScroller> :
                        <React.Fragment>
                            {
                                data.map((item, idx) => {
                                    return (
                                        <div className={styles.serviceItemWrapper} key={`services-${idx}`}>
                                            {
                                                item.map((service, idx) => {
                                                    return (
                                                        <div key={`${service.name}-${idx}`}
                                                             className={styles.serviceItem}>
                                                            <div className={styles.serviceName}>
                                                                {service.name}
                                                            </div>
                                                            <div className={styles.serviceLinks}>
                                                                {service.child_category.map((link) => {
                                                                    return (
                                                                        <Link to={{
                                                                            pathname: `/services/${link.slug}`,
                                                                            state: link.id
                                                                        }}
                                                                              key={`${link.id}`}
                                                                              className={styles.link}>
                                                                            {link.name}
                                                                        </Link>
                                                                    )
                                                                })}
                                                            </div>
                                                        </div>
                                                    )
                                                })
                                            }
                                        </div>
                                    )
                                })
                            }
                        </React.Fragment>}
            </div>
        </div>
    )
};

export default Services;
