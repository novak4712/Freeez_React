import React, {useContext, useEffect, useState, useCallback} from "react";
import ReactPageScroller from 'react-page-scroller';

import ScrollTip from 'components/ScrollTip'
import {CurrentThemeContext} from "contexts/currentTheme";

import styles from './Modal.module.scss';
import SinglePhoto from "components/SinglePhoto";

const Modal = ({data, id, isLoading}) => {
    const [currentThemeState, dispatch] = useContext(CurrentThemeContext);
    const [currentPage, setCurrentPage] = useState(null);
    const close = currentThemeState.isLang === 'ru' ? 'ЗАКРЫТЬ' : 'CLOSE';
    let slider = [];
    const handlePageChange = (number) => {
        setCurrentPage(number)
    };

    const handleModalChange = () => {
        dispatch({type: 'SET_MODAL', payload: false});
    };

    const handleKeyDown = useCallback((e) => {
        if (e.keyCode === 27) {
            dispatch({type: 'SET_MODAL', payload: false});
        }
    }, [dispatch]);


    useEffect(() => {

        document.addEventListener("keydown", handleKeyDown, false);
        return () => {
            document.removeEventListener("keydown", handleKeyDown, false);
        };
    },[handleKeyDown]);

    if (data) {
        for (let key in data.images) {
            if (data.images[key].length) {
                slider.push(data.images[key])
            }
        }
    }

    return (
        <div
            className={`${currentThemeState.isModal ? styles.modalWrapper : styles.modalWrapperNotViz} ${currentThemeState.isLight ? styles.light : styles.dark}`}>
            <ScrollTip currentPage={currentPage} length={slider.length} theme='light'/>
            <div className={styles.modalClose} onClick={handleModalChange}>
                <div className={styles.modalCloseText}>
                    {close}
                </div>
                <div className={styles.modalCloseCross}>
                    <svg width="15" height="15" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                            d="M10.286 9.00024L13.5004 5.78587C13.6709 5.61537 13.7666 5.38412 13.7667 5.14299C13.7667 4.90187 13.6709 4.67062 13.5004 4.50012C13.3299 4.32962 13.0986 4.23383 12.8575 4.23383C12.6164 4.23383 12.3851 4.32962 12.2146 4.50012L9.00024 7.71449L5.78587 4.50012C5.61537 4.32962 5.38412 4.23383 5.143 4.23383C4.90188 4.23383 4.67063 4.32962 4.50013 4.50012C4.32963 4.67062 4.23384 4.90187 4.23384 5.14299C4.23384 5.38412 4.32963 5.61537 4.50013 5.78587L7.7145 9.00024L4.50013 12.2146C4.32962 12.3851 4.23384 12.6164 4.23384 12.8575C4.23384 13.0986 4.32962 13.3299 4.50013 13.5004C4.67063 13.6709 4.90188 13.7666 5.143 13.7666C5.38412 13.7666 5.61537 13.6709 5.78587 13.5004L9.00024 10.286L12.2146 13.5004C12.3851 13.6709 12.6164 13.7666 12.8575 13.7666C13.0986 13.7666 13.3299 13.6709 13.5004 13.5004C13.6709 13.3299 13.7667 13.0986 13.7667 12.8575C13.7667 12.6164 13.6709 12.3851 13.5004 12.2146L10.286 9.00024Z"
                            fill="#37353C"/>
                    </svg>
                </div>
            </div>
            {(isLoading) ? <div>Loading...</div> :
                (slider.length > 1) ? <ReactPageScroller
                        containerWidth='100vw'
                        containerHeight='100vh'
                        transitionTimingFunction='ease-in-out'
                        pageOnChange={handlePageChange}
                        customPageNumber={currentPage}
                        blockScrollDown={currentPage === slider.length - 1}
                    >
                        {slider.map((item, idx) => {
                            return <ModalItem id={id} idImg={item} key={`item-${idx}`}/>
                        })}

                    </ReactPageScroller> :
                    <React.Fragment>
                        {slider.map((item, idx) => {
                            return <ModalItem id={id} idImg={item} key={`item-${idx}`}/>
                        })}
                    </React.Fragment>
            }
        </div>
    )
};


const ModalItem = ({id, idImg}) => {
    return (
        <div className={styles.modalItemWrapper}>
            <div className={styles.modalItem}>
                <SinglePhoto id={id} idImg={idImg}/>
            </div>
        </div>
    )
};

export default Modal;
